services:
  redis:
    build:
      context: .
      dockerfile: Dockerfile-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data # Persistent data storage
    restart: always
    networks:
      - app-network

  java-app:
    image: docker.io/clean01/layer-server_layer-api:latest
    container_name: layer-api
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./application-secret.properties:/config/application-secret.properties
      - ./tokens:/config/tokens
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  batch-job:
    image: docker.io/clean01/layer-server_layer-batch:latest #
    container_name: layer-batch
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./application-secret.properties:/config/application-secret.properties
      - ./tokens:/config/tokens
    networks:
      - app-network
    depends_on:
      - java-app
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  admin-app:
    image: docker.io/clean01/layer-server_layer-admin:latest #
    container_name: layer-admin
    ports:
      - "3000:3000"
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./application-secret.properties:/config/application-secret.properties
      - ./tokens:/config/tokens
    networks:
      - app-network
    depends_on:
      - java-app
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - java-app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

networks:
  app-network:

volumes:
  redis-data:
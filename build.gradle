plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

jar.enabled = false
bootJar.enabled = false

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group 'org.layer'
    version '0.0.1'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies { // 모든 하위 모듈에 추가 될 의존성 목록입니다.

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


    }

    test {
        useJUnitPlatform()
    }
}

project(":layer-api") {
    version '0.0.1'
    dependencies {
        implementation project(path: ':layer-common')
        implementation project(path: ':layer-domain')
        implementation project(path: ':layer-external')
        implementation project(path: ':layer-event')
        runtimeOnly project(path: ':layer-admin')

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        //== jwt ==//
        implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

        // oauth2-client 라이브러리
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.testcontainers:testcontainers:1.19.5'
        testImplementation 'org.testcontainers:junit-jupiter:1.19.5'

        // openfeign
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2")

        // swagger
        implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

        // jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // mysql
        runtimeOnly 'com.mysql:mysql-connector-j'

        // aop
        implementation 'org.springframework.boot:spring-boot-starter-aop'
    }

    jar.enabled = false
    bootJar.enabled = true
}

project(":layer-common") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
    }

}


project(":layer-domain") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation project(path: ':layer-common')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // h2
        runtimeOnly 'com.h2database:h2'


        //QueryDSL
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

    }
}

project(":layer-external") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation project(path: ':layer-common')
        implementation project(path: ':layer-domain')

        implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation 'com.google.api-client:google-api-client:2.0.0'
        implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
        implementation 'com.google.apis:google-api-services-sheets:v4-rev20220927-2.0.0'

        // NCP Object Storage
        implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

        // openfeign
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2")

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        testImplementation 'org.testcontainers:testcontainers:1.19.5'
        testImplementation 'org.testcontainers:junit-jupiter:1.19.5'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project(":layer-batch") {
    jar.enabled = false
    bootJar.enabled = true

    dependencies {
        implementation project(path: ':layer-common')
        implementation project(path: ':layer-domain')
        implementation project(path: ':layer-external')

        implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2")

        runtimeOnly 'com.mysql:mysql-connector-j'
    }

}

project(":layer-admin") {
    jar.enabled = true
    bootJar.enabled = false

    dependencies {
        compileOnly project(path: ':layer-event')

        compileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
        compileOnly 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.springframework.boot:spring-boot-starter-validation'
        runtimeOnly 'com.mysql:mysql-connector-j'
    }

}

project(":layer-event") {
    jar.enabled = true
    bootJar.enabled = false

    dependencies {

    }

}
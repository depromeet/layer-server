spring:
  config:
    import: application-secret.properties
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:layer-local-db;DATABASE_TO_UPPER=FALSE;mode=mysql  # H2 접속 정보 (전부 소문자로 지정)
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    open-in-view: false
  sql:
    init:
      mode: never

jwt:
  secret: ${DEV_JWT_SECRET}

kakao:
  login:
    api_key: ${KAKAO_API_KEY}
    redirect_uri: http://localhost:8080/api/auth/oauth2/kakao
    uri:
      base: https://kauth.kakao.com
      code: /oauth/authorize
      token: /oauth/token
  api:
    uri:
      base: https://kapi.kakao.com
      user: /v2/user/me

google:
  login:
    client_id: ${GOOGLE_CLIENT_ID}
    client_secret: ${GOOGLE_CLIENT_SECRET}
    redirect_uri: ${GOOGLE_REDIRECT_URI}

apple:
  login:
    issuer: ${APPLE_ISSUER}
    audience: ${APPLE_AUD}

ncp:
  storage:
    region: ${STORAGE_REGION}
    bucketName: ${STORAGE_NAME}
    endpoint: ${STORAGE_ENDPOINT}
    accessKey: ${STORAGE_ACCESS_KEY}
    secretKey: ${STORAGE_SECRET_KEY}

openai:
  systemContent: ${OPENAI_SYSTEM_CONTENT}
  apiKey: ${OPENAI_API_KEY}
  model: ${OPENAI_MODEL}
  maxTokens: ${OPENAI_MAX_TOKENS}

admin:
  password: ${ADMIN_PASSWORD}

discord:
  webhook:
    retrospect-url: ${DISCORD_RETROSPECT_URL}
    space-url: ${DISCORD_SPACE_URL}
    member-url: ${DISCORD_MEMBER_URL}
    error-url: ${DISCORD_ERROR_URL}
    member-activity-url: ${DISCORD_MEMBER_ACTIVITY_URL}

# actuator
management:
  endpoints:
    enabled-by-default: false
  endpoint:
    health:
      enabled: true